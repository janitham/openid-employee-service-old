/*
 * This file was generated by the Gradle 'init' task.
 */
import java.time.LocalDateTime

buildscript {
    dependencies {
        classpath "com.netflix.nebula:nebula-release-plugin:6.3.3"
        classpath "com.netflix.nebula:nebula-publishing-plugin:7.1.0"
    }
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "s3://${repoBucketName}/releases"
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
}

plugins {
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'maven-publish'
    id("org.springframework.boot") version "2.3.0.RELEASE"
    id("com.github.johnrengelman.processes") version "0.5.0"
    id("org.springdoc.openapi-gradle-plugin") version "1.3.0"
    id "jp.classmethod.aws.s3" version "0.41"
}

apply plugin: "nebula.release"
apply plugin: "nebula.maven-publish"
apply plugin: "nebula.javadoc-jar"
apply plugin: "nebula.source-jar"

/*repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}*/

configurations {
    swaggerSpec
}

aws {
    profileName = "default"
    region = "ap-south-1"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR1"
    }
}

def departmentClientVersion = '0.1.0-dev.2.uncommitted+cf332e3'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation("org.springdoc:springdoc-openapi-ui:1.2.33")

    implementation 'org.keycloak:keycloak-spring-boot-starter:9.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation("org.springdoc:springdoc-openapi-ui")

    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.2.6.RELEASE'

    compile "com.github.joschi.jackson:jackson-datatype-threetenbp:2.6.4"

    swaggerSpec(group: 'org.ss.department', name: 'openid-department-service', ext: 'json', classifier: 'openapi', version: departmentClientVersion)
}

group = 'org.ss.department'
//version = '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
    repositories {
        maven {
            url "s3://${repoBucketName}/releases"
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
}

bootJar {
    archiveFileName = 'application.jar'
    exclude("**/generated-gradle-jars/*")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task copyJar(type: Copy) {
    from 'Dockerfile'
    into 'build'
}

task dockerBuild(type: Exec) {
    workingDir 'build'
    executable "docker"
    args "build", ".", "-t", "${docker_registry}:${version}"
}

task dockerPush(type: Exec) {
    workingDir 'build'
    executable "docker"
    args "push", "${docker_registry}:${version}"
}

task helmDeploy(type: Exec) {
    commandLine "./helm",
            "--kubeconfig=kubeconfig.yaml",
            "upgrade",
            "--install",
            "spring-boot-app",
            "./chart",
            "--set", "image.repository=${docker_registry}",
            "--set", "image.tag=${version}",
            "--set", "timestamp=${getTimeNow()}"
}

dockerPush.dependsOn(dockerBuild)
copyJar.dependsOn(build)
dockerBuild.dependsOn(copyJar)

def getTimeNow() {
    LocalDateTime.now().toString()
}

def employeeApiDir = "$buildDir/generated/employee-api-client"

task employeeClientGen(type: Exec) {
    executable "java"
    args "-jar", "./swagger-codegen-cli.jar", "generate",
            "-i", "$buildDir/libs/openid-department-service-openapi.json",
            "--api-package", "org.ss.department.api",
            "--model-package", "org.ss.department.model",
            "--invoker-package", "org.ss.department.invoker",
            "-l", "java", "--library", "resttemplate",
            "-o", "${employeeApiDir}"
}

sourceSets {
    main {
        java {
            srcDirs = [
                    'src/main/java',
                    "${employeeApiDir}/src/main/java"
            ]
        }
    }
}

task copyOpenApiSpec(type: Copy) {
    from configurations.swaggerSpec
    into "$buildDir/libs"
    rename { String fileName ->
        fileName.replace(departmentClientVersion + "-", "")
    }
}

employeeClientGen.dependsOn(copyOpenApiSpec)
compileJava.dependsOn(employeeClientGen)